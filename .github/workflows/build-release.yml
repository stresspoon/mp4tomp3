name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
    
    - name: Download Whisper Small Model
      run: |
        mkdir models
        curl -L https://openaipublic.azureedge.net/main/whisper/models/9ecf779972d90ba49c06d968637d720dd632c55bbf19d441fb42bf17a411e794/small.pt -o models/small.pt
    
    - name: Download FFmpeg
      run: |
        curl -L https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip -o ffmpeg.zip
        7z x ffmpeg.zip
        move ffmpeg-master-latest-win64-gpl/bin/ffmpeg.exe .
    
    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile `
          --add-data "models/small.pt;models" `
          --add-data "ffmpeg.exe;." `
          --hidden-import whisper `
          --hidden-import torch `
          --hidden-import numpy `
          --collect-all whisper `
          --collect-all torch `
          --name MP4toMP3 `
          --windowed `
          --icon icon.ico `
          converter_standalone.py
    
    - name: Upload Windows Executable
      uses: actions/upload-artifact@v3
      with:
        name: MP4toMP3-Windows
        path: dist/MP4toMP3.exe

  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
    
    - name: Download Whisper Small Model
      run: |
        mkdir -p models
        curl -L https://openaipublic.azureedge.net/main/whisper/models/9ecf779972d90ba49c06d968637d720dd632c55bbf19d441fb42bf17a411e794/small.pt -o models/small.pt
    
    - name: Install FFmpeg
      run: |
        brew install ffmpeg
        cp $(which ffmpeg) .
    
    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile \
          --add-data "models/small.pt:models" \
          --add-data "ffmpeg:." \
          --hidden-import whisper \
          --hidden-import torch \
          --hidden-import numpy \
          --collect-all whisper \
          --collect-all torch \
          --name MP4toMP3 \
          --windowed \
          --icon icon.icns \
          --osx-bundle-identifier com.mp4tomp3.converter \
          converter_standalone.py
    
    - name: Create DMG
      run: |
        mkdir dmg
        cp -r dist/MP4toMP3.app dmg/
        hdiutil create -volname "MP4toMP3" -srcfolder dmg -ov -format UDZO MP4toMP3.dmg
    
    - name: Upload macOS App
      uses: actions/upload-artifact@v3
      with:
        name: MP4toMP3-macOS
        path: MP4toMP3.dmg

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          MP4toMP3-Windows/MP4toMP3.exe
          MP4toMP3-macOS/MP4toMP3.dmg
        body: |
          ## MP4 to MP3 Converter
          
          ### 🎉 새 기능
          - AI 음성인식 (STT) 기능 내장
          - Whisper Small 모델 포함
          - 오프라인 작동
          
          ### 📦 다운로드
          - **Windows**: MP4toMP3.exe
          - **macOS**: MP4toMP3.dmg
          
          ### 🚀 사용법
          1. 파일 다운로드
          2. 실행 (추가 설치 불필요)
          3. MP4 파일 선택
          4. 변환 시작!
        draft: false
        prerelease: false